C oota-causality-13
(*
 * Result: Never
 *
 * http://www.cs.umd.edu/~pugh/java/memoryModel/unifiedProposal/testcases.html
 *
 * Decision: Disallowed. In all sequentially consistent executions,
 *	no writes to x or y occur and the program is correctly
 *	synchronized. The only SC behavior is r1 == r2 == 0.
 *)
{
	[x] = 0;
	[y] = 0;
}

P0(atomic_int *x, atomic_int *y) {
	int r1 = atomic_load_explicit(x, memory_order_relaxed);
	if (r1 == 1)
		atomic_store_explicit(y, 1, memory_order_relaxed);
}

P1(atomic_int *x, atomic_int *y) {
	int r2 = atomic_load_explicit(y, memory_order_relaxed);
	if (r2 == 1)
		atomic_store_explicit(x, 1, memory_order_relaxed);
}

exists(0:r1=1 /\ 1:r2=1)
