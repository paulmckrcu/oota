C oota-causality-16
(*
 * Result: Never
 *
 * http://www.cs.umd.edu/~pugh/java/memoryModel/unifiedProposal/testcases.html
 *
 * Decision: Allowed.
 *
 * Note: Maybe for Java, but relaxed atomics in C11 prohibit violating
 *	cache coherence.  Adjusted result accordingly.
 *)
{
	[x] = 0;
}

P0(atomic_int *x) {
	int r1 = atomic_load_explicit(x, memory_order_relaxed);
	atomic_store_explicit(x, 1, memory_order_relaxed);
}

P1(atomic_int *x) {
	int r2 = atomic_load_explicit(x, memory_order_relaxed);
	atomic_store_explicit(x, 2, memory_order_relaxed);
}

exists(0:r1=2 /\ 1:r2=1)
