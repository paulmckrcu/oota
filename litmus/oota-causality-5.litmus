C oota-causality-5
(*
 * Result: Never
 *
 * http://www.cs.umd.edu/~pugh/java/memoryModel/unifiedProposal/testcases.html
 *
 * Decision: Forbidden: values are not allowed to come out of thin air,
 *	even if there are other executions in which the thin-air value
 *	would have been written to that variable by some not out-of-thin
 *	air means.
 *)
{
	[x] = 0;
	[y] = 0;
	[z] = 0;
}

P0(atomic_int *x, atomic_int *y, atomic_int *z) {
	int r1 = atomic_load_explicit(x, memory_order_relaxed);
	atomic_store_explicit(y, r1, memory_order_relaxed);
}

P1(atomic_int *x, atomic_int *y, atomic_int *z) {
	int r2 = atomic_load_explicit(y, memory_order_relaxed);
	atomic_store_explicit(x, r2, memory_order_relaxed);
}

P2(atomic_int *x, atomic_int *y, atomic_int *z) {
	atomic_store_explicit(z, 1, memory_order_relaxed);
}

P3(atomic_int *x, atomic_int *y, atomic_int *z) {
	int r3 = atomic_load_explicit(z, memory_order_relaxed);
	atomic_store_explicit(x, r3, memory_order_relaxed);
}

exists(0:r1=1 /\ 1:r2=1 /\ 3:r3=0)
